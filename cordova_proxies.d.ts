// Generated by dts-bundle v0.2.0
// Dependencies for this module:
//   ../typings/backbone/backbone.d.ts

declare module 'cordova_proxies' {
    export import browser = require('__cordova_proxies/browser');
    export import core = require('__cordova_proxies/core');
    export import file = require('__cordova_proxies/file');
    export import keyboard = require('__cordova_proxies/keyboard');
    export import ready = require('__cordova_proxies/ready');
    export import media = require('__cordova_proxies/media');
    export import splashscreen = require('__cordova_proxies/splashscreen');
    export import statusbar = require('__cordova_proxies/statusbar');
}

declare module '__cordova_proxies/browser' {
    import EventedClass = require('__cordova_proxies/EventedClass');
    export interface IRequestWindow extends Window {
        show(): void;
    }
    export interface IPostMessageEvent extends Event {
        data: any;
        origin: string;
        source: Window;
    }
    export class BrowserRequest extends EventedClass.EventedClass {
        constructor(url: string);
        url: string;
        windowOptions: string[];
        openDelay: number;
        window: IRequestWindow;
        windowShowTimeout: number;
        _addWindowEvents(): void;
        _onLoadStart(e: InAppBrowserEvent): any;
        _onLoadStop(e: InAppBrowserEvent): any;
        _onLoadError(e: InAppBrowserEvent): any;
        _onPostMessage(e: IPostMessageEvent): any;
        _onExit(e: InAppBrowserEvent): any;
        open(url?: string): number;
        close(): void;
        show(): any;
    }
}

declare module '__cordova_proxies/core' {
    export function isAvailable(): boolean;
}

declare module '__cordova_proxies/file' {
    export function syncLocal(name: string, url: string, opts: any, cb: (err: FileTransferError, url?: string) => void): void;
}

declare module '__cordova_proxies/keyboard' {
    /**
        * Hide the keyboard accessory bar with the next, previous and done buttons.
        *
        * @param hide
        */
    export function hideKeyboardAccessoryBar(hide: boolean): void;
    /**
        * Close the keyboard if it is open.
        */
    export function close(): void;
    /**
        * Disable native scrolling, useful if you are using JavaScript to scroll
        *
        * @param disbale
        */
    export function disableScroll(disable: boolean): void;
    /**
        * Whether or not the keyboard is currently visible.
        */
    export function isVisible(): boolean;
    export interface IKeyboardShowEvent extends Event {
            keyboardHeight: number;
    }
    export function listenToShow(listener: (e: IKeyboardShowEvent) => void): void;
    export function listenToHide(listener: (e: Event) => void): void;
}

declare module '__cordova_proxies/ready' {
    export var whenReady: JQueryPromise<{}>;
}

declare module '__cordova_proxies/media' {
    export interface IMediaPlayable {
        play: () => any;
        pause: () => any;
        stop?: () => any;
        release?: () => any;
    }
    export class MediaProxy {
        static MEDIA_NONE: number;
        static MEDIA_STARTING: number;
        static MEDIA_RUNNING: number;
        static MEDIA_PAUSED: number;
        static MEDIA_STOPPED: number;
        constructor(url: string, mediaSuccess: () => void, mediaError: (error: MediaError) => any, mediaStatus: (status: number) => void);
        media: IMediaPlayable;
        audio: HTMLAudioElement;
        url: string;
        mediaSuccess: () => void;
        mediaError: (error: MediaError) => any;
        mediaStatus: (status: number) => void;
        currentStatus: number;
        protected normalizeUrl(): string;
        protected statusChange(status: number): void;
        play(): void;
        pause(): void;
        stop(): void;
        release(): void;
    }
}

declare module '__cordova_proxies/splashscreen' {
    /***
      * Splash screen helpers
      *
      * Requires:
      * http://plugins.cordova.io/#/package/org.apache.cordova.splashscreen
      */
    export function show(): void;
    export function hide(): void;
}

declare module '__cordova_proxies/statusbar' {

}

declare module '__cordova_proxies/EventedClass' {
    import Backbone = require('backbone');
    export class EventedClass implements Backbone.Events {
        on: (eventName: string, callback?: Function, context?: any) => any;
        off: (eventName?: string, callback?: Function, context?: any) => any;
        trigger: (eventName: string, ...args: any[]) => any;
        bind: (eventName: string, callback: Function, context?: any) => any;
        unbind: (eventName?: string, callback?: Function, context?: any) => any;
        once: (events: string, callback: Function, context?: any) => any;
        listenTo: (object: any, events: string, callback: Function) => any;
        listenToOnce: (object: any, events: string, callback: Function) => any;
        stopListening: (object?: any, events?: string, callback?: Function) => any;
    }
}

